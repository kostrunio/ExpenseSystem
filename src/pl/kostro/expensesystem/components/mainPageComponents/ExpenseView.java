package pl.kostro.expensesystem.components.mainPageComponents;

import pl.kostro.expensesystem.model.ExpenseSheet;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.MenuBar.MenuItem;
import com.vaadin.ui.VerticalLayout;

public class ExpenseView extends CustomComponent {

	private static final long serialVersionUID = -7668118300710655240L;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalLayout mainView;
	@AutoGenerated
	private MenuBar monthMenu;
	@AutoGenerated
	private HorizontalLayout menuLayout;
	@AutoGenerated
	private Button cleanFilterButton;
	@AutoGenerated
	private Button filterButton;
	@AutoGenerated
	private MenuBar yearMenu;
	private String year;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public ExpenseView(final ExpenseSheet expenseSheet) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		MenuBar.Command yearCommand = new MenuBar.Command() {
			
			private static final long serialVersionUID = -5557223656934648266L;

			@Override
			public void menuSelected(MenuItem selectedItem) {
				year = selectedItem.getText();
				monthMenu.setVisible(true);
			}
		};
		
		for (String year : expenseSheet.getYearList())
		  yearMenu.addItem(year, yearCommand);
		
		MenuBar.Command monthCommand = new MenuBar.Command() {
			
			private static final long serialVersionUID = 3896360510777453107L;

			@Override
			public void menuSelected(MenuItem selectedItem) {
				// TODO Auto-generated method stub
				mainView.removeAllComponents();
				mainView.addComponent(new MonthView(expenseSheet, selectedItem.getText(), year));
			}
		};
		
		monthMenu.addItem("styczeñ", monthCommand);
		monthMenu.addItem("luty", monthCommand);
		monthMenu.addItem("marzec", monthCommand);
		monthMenu.addItem("kwiecieñ", monthCommand);
		monthMenu.addItem("maj", monthCommand);
		monthMenu.addItem("czerwiec", monthCommand);
		monthMenu.addItem("lipiec", monthCommand);
		monthMenu.addItem("sierpieñ", monthCommand);
		monthMenu.addItem("wrzesieñ", monthCommand);
		monthMenu.addItem("paŸdziernik", monthCommand);
		monthMenu.addItem("listopad", monthCommand);
		monthMenu.addItem("grudzieñ", monthCommand);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// menuLayout
		menuLayout = buildMenuLayout();
		mainLayout.addComponent(menuLayout);
		
		// monthMenu
		monthMenu = new MenuBar();
		monthMenu.setImmediate(false);
		monthMenu.setVisible(false);
		monthMenu.setWidth("100.0%");
		monthMenu.setHeight("-1px");
		mainLayout.addComponent(monthMenu);
		
		// mainView
		mainView = new VerticalLayout();
		mainView.setImmediate(false);
		mainView.setWidth("-1px");
		mainView.setHeight("-1px");
		mainView.setMargin(false);
		mainLayout.addComponent(mainView);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildMenuLayout() {
		// common part: create layout
		menuLayout = new HorizontalLayout();
		menuLayout.setImmediate(false);
		menuLayout.setWidth("100.0%");
		menuLayout.setHeight("-1px");
		menuLayout.setMargin(false);
		menuLayout.setSpacing(true);
		
		// yearMenu
		yearMenu = new MenuBar();
		yearMenu.setImmediate(false);
		yearMenu.setWidth("-1px");
		yearMenu.setHeight("-1px");
		menuLayout.addComponent(yearMenu);
		
		// filterButton
		filterButton = new Button();
		filterButton.setCaption("Filtruj");
		filterButton.setImmediate(true);
		filterButton.setWidth("-1px");
		filterButton.setHeight("-1px");
		menuLayout.addComponent(filterButton);
		menuLayout.setComponentAlignment(filterButton, new Alignment(6));
		
		// cleanFilterButton
		cleanFilterButton = new Button();
		cleanFilterButton.setCaption("Wyczyœæ");
		cleanFilterButton.setImmediate(true);
		cleanFilterButton.setWidth("-1px");
		cleanFilterButton.setHeight("-1px");
		menuLayout.addComponent(cleanFilterButton);
		
		return menuLayout;
	}

}
