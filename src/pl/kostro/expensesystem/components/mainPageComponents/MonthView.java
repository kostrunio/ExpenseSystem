package pl.kostro.expensesystem.components.mainPageComponents;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;

import pl.kostro.expensesystem.model.ExpenseSheet;
import pl.kostro.expensesystem.service.ExpenseSheetService;
import pl.kostro.expensesystem.utils.Converter;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Calendar;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.components.calendar.CalendarComponentEvents.DateClickEvent;
import com.vaadin.ui.components.calendar.CalendarComponentEvents.WeekClick;
import com.vaadin.ui.components.calendar.event.CalendarEvent;
import com.vaadin.ui.components.calendar.event.CalendarEventProvider;
import com.vaadin.ui.components.calendar.handler.BasicDateClickHandler;
import com.vaadin.ui.components.calendar.handler.BasicWeekClickHandler;

public class MonthView extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;

	@AutoGenerated
	private Calendar monthCalendar;

	@AutoGenerated
	private Label dateLabel;

	private static final long serialVersionUID = 2594978831652398190L;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MonthView(final ExpenseSheet expenseSheet, String monthName, String year) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		dateLabel.setValue(monthName + " " + year);
		
		final ExpenseSheetService expenseSheetService = new ExpenseSheetService();
		monthCalendar.setEventProvider(new CalendarEventProvider() {

			private static final long serialVersionUID = -2219052651460350955L;

			@Override
			public List<CalendarEvent> getEvents(Date startDate, Date endDate) {
				return Converter.transformExpensesToEvents(expenseSheetService.prepareDateExpenseMap(expenseSheet, startDate, endDate));
			}
			
		});
		
		monthCalendar.setHandler(new BasicDateClickHandler() {
			
			private static final long serialVersionUID = 2426375506359469533L;

			@Override
			public void dateClick(DateClickEvent event) {
				setCompositionRoot(new DayView(expenseSheet, event.getDate()));
			}
		});
		
		monthCalendar.setHandler(new BasicWeekClickHandler() {
			
			private static final long serialVersionUID = -5488623945839839169L;

			@Override
			protected void setDates(WeekClick event, Date start, Date end) {
				//Do nothing
			}
		});
		showCalendar(expenseSheet, monthName, year);
	}

	public void showCalendar(ExpenseSheet expenseSheet, String monthName, String year) {
	  try {
	    SimpleDateFormat df = new SimpleDateFormat("dd-MMMM-yyyy");
	    Date date;
      date = df.parse(expenseSheet.getReloadeDay()+"-"+monthName+"-"+year);
      java.util.Calendar calendar = GregorianCalendar.getInstance();
      calendar.setTime(date);
      monthCalendar.setEndDate(calendar.getTime());
      calendar.add(java.util.Calendar.MONTH, -1);
      monthCalendar.setStartDate(calendar.getTime());
	  } catch (ParseException e) {
	    e.printStackTrace();
	  }
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// dateLabel
		dateLabel = new Label();
		dateLabel.setImmediate(false);
		dateLabel.setWidth("-1px");
		dateLabel.setHeight("-1px");
		dateLabel.setValue("Label");
		mainLayout.addComponent(dateLabel);
		mainLayout.setComponentAlignment(dateLabel, new Alignment(48));
		
		// monthCalendar
		monthCalendar = new Calendar();
		monthCalendar.setImmediate(false);
		monthCalendar.setWidth("-1px");
		monthCalendar.setHeight("-1px");
		mainLayout.addComponent(monthCalendar);
		
		return mainLayout;
	}

}
