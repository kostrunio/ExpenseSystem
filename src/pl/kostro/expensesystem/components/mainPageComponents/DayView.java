package pl.kostro.expensesystem.components.mainPageComponents;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import pl.kostro.expensesystem.model.Category;
import pl.kostro.expensesystem.model.RealUser;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;

public class DayView extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Button backButton;
	@AutoGenerated
	private GridLayout expensesLayout;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 * @param basicDateClickHandler 
	 */
	public DayView(final RealUser loggedUser, final Date date, final MonthView parentView) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		
		prepareExpensesLayout(expensesLayout, loggedUser);
		backButton.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				setCompositionRoot(new MonthView(loggedUser,
						new SimpleDateFormat("MMMM").format(date),
						new SimpleDateFormat("yyyy").format(date)));
			}
			
		});
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setCaption("kwota");
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// expensesLayout
		expensesLayout = new GridLayout();
		expensesLayout.setImmediate(false);
		expensesLayout.setWidth("-1px");
		expensesLayout.setHeight("-1px");
		expensesLayout.setMargin(true);
		expensesLayout.setSpacing(true);
		expensesLayout.setColumns(2);
		expensesLayout.setRows(8);
		mainLayout.addComponent(expensesLayout);
		
		// backButton
		backButton = new Button();
		backButton.setCaption("Powrót");
		backButton.setImmediate(true);
		backButton.setWidth("-1px");
		backButton.setHeight("-1px");
		mainLayout.addComponent(backButton);
		
		return mainLayout;
	}

	private void prepareExpensesLayout(GridLayout expensesLayout, final RealUser loggedUser) {
		List<Category> categoryList = loggedUser.getExpenseSheetList().get(0).getCategoryList();
		expensesLayout.setColumns(2);
		expensesLayout.setRows(categoryList.size());
		
		for (int i = 0; i < categoryList.size(); i++) {
			Label catLabel = new Label();
			catLabel.setImmediate(false);
			catLabel.setWidth("-1px");
			catLabel.setHeight("-1px");
			catLabel.setValue(categoryList.get(i).getName());
			expensesLayout.addComponent(catLabel, 0, i);
			expensesLayout.setComponentAlignment(catLabel, new Alignment(48));
			
			Button catButton = new Button();
			catButton.setCaption("Button");
			catButton.setImmediate(true);
			catButton.setWidth("-1px");
			catButton.setHeight("-1px");
			expensesLayout.addComponent(catButton, 1, i);
			
			catButton.addClickListener(new Button.ClickListener() {

				@Override
				public void buttonClick(ClickEvent event) {
					
				}
				
			});
		}
	}

}
