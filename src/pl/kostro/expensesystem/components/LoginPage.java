package pl.kostro.expensesystem.components;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class LoginPage extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout horizontalLayout;
	@AutoGenerated
	private Button registerButton;
	@AutoGenerated
	private Button remindPasswordButton;
	@AutoGenerated
	private HorizontalLayout loginLayout;
	@AutoGenerated
	private Button loginButton;
	@AutoGenerated
	private GridLayout grid;
	@AutoGenerated
	private PasswordField password;
	@AutoGenerated
	private Label passwordLabel;
	@AutoGenerated
	private TextField userName;
	@AutoGenerated
	private Label userNameLabel;
	@AutoGenerated
	private Label loginPageLabel;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public LoginPage() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// loginPageLabel
		loginPageLabel = new Label();
		loginPageLabel.setImmediate(false);
		loginPageLabel.setWidth("-1px");
		loginPageLabel.setHeight("-1px");
		loginPageLabel.setValue("Label");
		mainLayout.addComponent(loginPageLabel);
		
		// loginLayout
		loginLayout = buildLoginLayout();
		mainLayout.addComponent(loginLayout);
		
		// horizontalLayout
		horizontalLayout = buildHorizontalLayout();
		mainLayout.addComponent(horizontalLayout);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildLoginLayout() {
		// common part: create layout
		loginLayout = new HorizontalLayout();
		loginLayout.setImmediate(false);
		loginLayout.setWidth("-1px");
		loginLayout.setHeight("-1px");
		loginLayout.setMargin(false);
		
		// grid
		grid = buildGrid();
		loginLayout.addComponent(grid);
		
		// loginButton
		loginButton = new Button();
		loginButton.setCaption("Button");
		loginButton.setImmediate(false);
		loginButton.setWidth("-1px");
		loginButton.setHeight("-1px");
		loginLayout.addComponent(loginButton);
		
		return loginLayout;
	}

	@AutoGenerated
	private GridLayout buildGrid() {
		// common part: create layout
		grid = new GridLayout();
		grid.setImmediate(false);
		grid.setWidth("-1px");
		grid.setHeight("-1px");
		grid.setMargin(false);
		grid.setRows(4);
		
		// userNameLabel
		userNameLabel = new Label();
		userNameLabel.setImmediate(false);
		userNameLabel.setWidth("-1px");
		userNameLabel.setHeight("-1px");
		userNameLabel.setValue("Label");
		grid.addComponent(userNameLabel, 0, 0);
		
		// userName
		userName = new TextField();
		userName.setImmediate(false);
		userName.setWidth("-1px");
		userName.setHeight("-1px");
		grid.addComponent(userName, 0, 1);
		
		// passwordLabel
		passwordLabel = new Label();
		passwordLabel.setImmediate(false);
		passwordLabel.setWidth("-1px");
		passwordLabel.setHeight("-1px");
		passwordLabel.setValue("Label");
		grid.addComponent(passwordLabel, 0, 2);
		
		// password
		password = new PasswordField();
		password.setImmediate(false);
		password.setWidth("-1px");
		password.setHeight("-1px");
		grid.addComponent(password, 0, 3);
		
		return grid;
	}

	@AutoGenerated
	private HorizontalLayout buildHorizontalLayout() {
		// common part: create layout
		horizontalLayout = new HorizontalLayout();
		horizontalLayout.setImmediate(false);
		horizontalLayout.setWidth("-1px");
		horizontalLayout.setHeight("-1px");
		horizontalLayout.setMargin(false);
		
		// remindPasswordButton
		remindPasswordButton = new Button();
		remindPasswordButton.setCaption("Button");
		remindPasswordButton.setImmediate(false);
		remindPasswordButton.setWidth("-1px");
		remindPasswordButton.setHeight("-1px");
		horizontalLayout.addComponent(remindPasswordButton);
		
		// registerButton
		registerButton = new Button();
		registerButton.setCaption("Button");
		registerButton.setImmediate(false);
		registerButton.setWidth("-1px");
		registerButton.setHeight("-1px");
		horizontalLayout.addComponent(registerButton);
		
		return horizontalLayout;
	}

}
